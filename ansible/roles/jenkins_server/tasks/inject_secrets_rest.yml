- name: Render Groovy script for Jenkins secret
  template:
    src: ../templates/inject_jenkins_secret.groovy.j2
    dest: "/tmp/{{ item.secret_id }}.groovy"
  loop: "{{ jenkins_secrets }}"
  loop_control:
    label: "{{ item.secret_id }}"

- name: Inject Jenkins secret via curl and Groovy
  shell: |
    curl -s -X POST "{{ jenkins_host }}/scriptText" \
      -u "{{ jenkins_user }}:{{ jenkins_api_token }}" \
      -H "Content-Type: application/x-www-form-urlencoded" \
      --data-urlencode "script=$(cat /tmp/{{ item.secret_id }}.groovy)" \
      && echo "{{ item.secret_id }} injected"
  args:
    executable: /bin/bash
  loop: "{{ jenkins_secrets }}"
  loop_control:
    label: "{{ item.secret_id }}"
  register: scripttext_result
  failed_when: scripttext_result.rc != 0 or 'Exception' in scripttext_result.stdout

- name: Clean up Groovy script
  file:
    path: "/tmp/{{ item.secret_id }}.groovy"
    state: absent
  loop: "{{ jenkins_secrets }}"
