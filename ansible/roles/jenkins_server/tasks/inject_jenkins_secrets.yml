- name: Inject Jenkins credentials via curl
  shell: |
    curl -b /tmp/jenkins_cookie.txt \
      -s -X POST "{{ jenkins_host | trim('/') }}/credentials/store/system/domain/_/createCredentials" \
      -u "{{ jenkins_user }}:{{ jenkins_api_tokens }}" \
      -H "Jenkins-Crumb: {{ jenkins_crumb }}" \
      --data-urlencode 'json={
          "" : "0",
          "credentials": {
            "scope": "GLOBAL",
            "id": "{{ item.secret_id }}",
            "secret": "{{ item.secret_value }}",
            "description": "{{ item.secret_description }}",
            "$class": "org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl",
            "stapler-class": "org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl"    
          }
        }
        '
  args:
    executable: /bin/bash
  loop: "{{ jenkins_secrets }}"
  loop_control:
    label: "{{ item.secret_id }}"
  register: injected_secrets_result
  failed_when: injected_secrets_result.rc != 0 or 'HTTP ERROR' in injected_secrets_result.stdout
  
- name: Render SSH Jenkins credential payload
  set_fact:
    ssh_credential_payloads: >-
      {{
        ssh_credential_payloads | default([]) + [{
          "id": item.secret_id,
          "payload": 'json=' ~ {
            "": "0",
            "credentials": {
              "scope": "GLOBAL",
              "id": item.secret_id,
              "username": item.username,
              "privateKeySource": {
                "stapler-class": "com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey$DirectEntryPrivateKeySource",
                "privateKey": item.private_key_path
              },
              "passphrase": item.secret_passphrase | default(""),
              "description": item.secret_description,
              "$class": "com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey",
              "stapler-class": "com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey"
            }
          } | to_json
        }]
      }}
  loop: "{{ jenkins_ssh_secrets }}"
  loop_control:
    label: "{{ item.secret_id }}"


- name: Inject SSH Jenkins credential using curl
  shell: |
    curl -b /tmp/jenkins_cookie.txt \
      -s -X POST "{{ jenkins_host | trim('/') }}/credentials/store/system/domain/_/createCredentials" \
      -u "{{ jenkins_user }}:{{ jenkins_api_tokens }}" \
      -H "Jenkins-Crumb: {{ jenkins_crumb }}" \
      --data-urlencode '{{ item.payload }}'
  args:
    executable: /bin/bash
  loop: "{{ ssh_credential_payloads }}"
  loop_control:
    label: "{{ item.secret_id }}"
  register: injected_ssh_results
  failed_when: injected_ssh_results.rc != 0 or 'HTTP ERROR' in injected_ssh_results.stdout

